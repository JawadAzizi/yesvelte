.#{$prefix}form-input {
	@extend %form-control;
	@extend %mb-2;
	.#{$prefix}label {
		@extend %label;
	}
}
.#{$prefix}input {
	@extend %input;
	@extend %input-bordered;
	@extend %w-full;
}

.#{$prefix}input-wrapper {
	position: relative;

	.#{$prefix}input:not(:first-child) {
		padding-left: 3rem;
	}
	.#{$prefix}input:not(:last-child) {
		padding-right: 3rem;
	}

	.#{$prefix}input-icon:first-child {
		left: 0;
	}
	.#{$prefix}input-icon:last-child {
		right: 0;
	}

	.#{$prefix}input-icon {
		position: absolute;
		top: 0;
		bottom: 0;
		z-index: 1;
		background-color: transparent;
		display: flex;
		align-items: center;
		padding-left: 1rem;
		padding-right: 1rem;
	}
}



.#{$prefix}input-state-valid {
	@extend %input-success;
}
.#{$prefix}input-state-invalid {
	@extend %input-error;
}
.#{$prefix}input-border-rounded {
	@extend %rounded-full;
}
.#{$prefix}input-border-flush {
	@extend %border-transparent;
}

@each $size in (sm md lg) {
	.#{$prefix}input-size-#{$size} {
		@extend %input-#{$size};
	}
}

// daisyui colors
@each $colorName, $daisyuiColorName in $RoleColors {
	.#{$prefix}input-color-#{$colorName} {
		@extend %input-#{$daisyuiColorName};
	}
}

@each $colorName, $daisyuiColorName in $StateColors {
	.#{$prefix}input-color-#{$colorName} {
		@extend %input-#{$daisyuiColorName};
	}
}

// constant colors
@each $colorName, $colorVariant in $namedColors {
	.#{$prefix}input-color-#{$colorName}:not(.#{$prefix}input-disabled) {
		background-color: map-get($colorVariant, 'default');
		border-color: map-get($colorVariant, 'default');
		color: map-get($colorVariant, 'content');

		&:focus {
			background-color: map-get($colorVariant, 'focus');
			border-color: map-get($colorVariant, 'focus');
		}
	}
}

// social media colors
@each $colorName, $colorVariant in $socialColors {
	.#{$prefix}input-color-#{$colorName}:not(.#{$prefix}input-disabled) {
		background-color: map-get($colorVariant, 'default');
		border-color: map-get($colorVariant, 'default');
		color: map-get($colorVariant, 'content');

		&:focus {
			background-color: map-get($colorVariant, 'focus');
			border-color: map-get($colorVariant, 'focus');
		}

		&.#{$prefix}input-outline {
			background-color: transparent;
			border-color: map-get($colorVariant, 'default');
			color: map-get($colorVariant, 'default');
		}
	}
}
