.#{$prefix}button {
	--color-value-opacity: 1;
	@extend .btn;
	position: relative;
	gap: 0.5rem;
	flex-wrap: nowrap;
	white-space: nowrap;
}

// daisyui colors
@each $colorName, $daisyuiColorName in $RoleColors {
	.#{$prefix}button-color-#{$colorName} {
		@extend .btn-#{$daisyuiColorName};
	}
}

@each $colorName, $daisyuiColorName in $StateColors {
	.#{$prefix}button-color-#{$colorName} {
		@extend .btn-#{$daisyuiColorName};
	}
}

// constant colors
@each $colorName, $colorVariant in $namedColors {
	.#{$prefix}button-color-#{$colorName}:not(.#{$prefix}button-disabled) {
		background-color: map-get($colorVariant, 'default');
		border-color: map-get($colorVariant, 'default');
		color: map-get($colorVariant, 'content');

		&:hover {
			background-color: map-get($colorVariant, 'focus');
			border-color: map-get($colorVariant, 'focus');
		}

		&.#{$prefix}button-outline {
			background-color: transparent;
			border-color: map-get($colorVariant, 'default');
			color: map-get($colorVariant, 'default');
		}
	}
}

// social media colors
@each $colorName, $colorVariant in $socialColors {
	.#{$prefix}button-color-#{$colorName}:not(.#{$prefix}button-disabled) {
		background-color: map-get($colorVariant, 'default');
		border-color: map-get($colorVariant, 'default');
		color: map-get($colorVariant, 'content');

		&:hover {
			background-color: map-get($colorVariant, 'focus');
			border-color: map-get($colorVariant, 'focus');
		}

		&.#{$prefix}button-outline {
			background-color: transparent;
			border-color: map-get($colorVariant, 'default');
			color: map-get($colorVariant, 'default');
		}
	}
}

.#{$prefix}button-ghost {
	@extend .btn-ghost;

	// daisyui colors
	@each $colorName, $daisyuiColorName in $RoleColors {
		&.#{$prefix}button-color-#{$colorName} {
			@extend .text-#{$daisyuiColorName};
		}
	}

	@each $colorName, $daisyuiColorName in $StateColors {
		&.#{$prefix}button-color-#{$colorName} {
			@extend .text-#{$daisyuiColorName};
		}
	}

	// constant colors
	@each $colorName, $colorVariant in $namedColors {
		&.#{$prefix}button-color-#{$colorName} {
			background-color: transparent;
			border-color: transparent;
			color: map-get($colorVariant, 'value');
			&:hover {
				background-color: hsl(var(--bc) / var(--tw-bg-opacity, 0.2));
				border-color: transparent;
				color: map-get($colorVariant, 'value');
			}
		}
	}

	// social media colors
	@each $colorName, $colorVariant in $socialColors {
		&.#{$prefix}button-color-#{$colorName} {
			background-color: transparent;
			border-color: transparent;
			color: map-get($colorVariant, 'default');
			&:hover {
				background-color: hsl(var(--bc) / var(--tw-bg-opacity, 0.2));
				border-color: transparent;
				color: map-get($colorVariant, 'default');
			}
		}
	}
}

.#{$prefix}button-link {
	@extend .btn-link;
	// daisyui colors
	@each $colorName, $daisyuiColorName in $RoleColors {
		&.#{$prefix}button-color-#{$colorName} {
			@extend .text-#{$daisyuiColorName};
		}
	}

	@each $colorName, $daisyuiColorName in $StateColors {
		&.#{$prefix}button-color-#{$colorName} {
			@extend .text-#{$daisyuiColorName};
		}
	}

	// constant colors
	@each $colorName, $colorVariant in $namedColors {
		&.#{$prefix}button-color-#{$colorName} {
			background-color: transparent;
			border-color: transparent;
			color: map-get($colorVariant, 'value');
			&:hover {
				background-color: transparent;
				border-color: transparent;
				color: map-get($colorVariant, 'value');
			}
		}
	}

	// social media colors
	@each $colorName, $colorVariant in $socialColors {
		&.#{$prefix}button-color-#{$colorName} {
			background-color: transparent;
			border-color: transparent;
			color: map-get($colorVariant, 'default');
			&:hover {
				background-color: transparent;
				border-color: transparent;
				color: map-get($colorVariant, 'default');
			}
		}
	}
}

.#{$prefix}button-disabled {
	@extend .btn-disabled;
}

.#{$prefix}button-tile {
	border-radius: 0;
}

.#{$prefix}button-pill {
	border-radius: 10rem;
}

.#{$prefix}button-outline {
	@extend .btn-outline;
}

.#{$prefix}button-size-lg {
	@extend .btn-lg;
}

.#{$prefix}button-size-sm {
	@extend .btn-sm;
}

.#{$prefix}button-loading {
	color: transparent !important;
	pointer-events: none;
	&:after {
		--y-btn-icon-size: 1.25rem;
		animation: spinner-border 0.75s linear infinite;
		border-right-color: currentcolor;
		border: 2px solid;
		border-radius: 100rem;
		border-right: 2px solid transparent;
		content: '';
		display: inline-block;
		height: var(--y-btn-icon-size);
		left: calc(50% - var(--y-btn-icon-size) / 2);
		position: absolute;
		top: calc(50% - var(--y-btn-icon-size) / 2);
		vertical-align: text-bottom;
		width: var(--y-btn-icon-size);
		color: white;
	}
}
@keyframes spinner-border {
	to {
		transform: rotate(360deg) /* rtl:ignore */;
	}
}
